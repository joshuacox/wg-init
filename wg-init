#!/bin/sh
helper_line="MyAddress=192.168.1.5/24 MyDNS=192.168.1.1 PeerPublicKey='DEADBEEF123=' PeerAllowedIPs='192.168.1.0/24' PeerEndpoint='10.0.0.23:51820' $0"
warn_env_var () {
  ENV_VAR_TO_SET=$1
  echo "Please set the environment variable '$ENV_VAR_TO_SET'"
  echo "e.g. "
  echo "$helper_line"
  exit 1
}

env_var_checks () {
  if [ -z $MyAddress ]; then
    warn_env_var MyAddress
  fi
  if [ -z $MyDNS ]; then
    warn_env_var MyDNS
  fi
  if [ -z $PeerPublicKey ]; then
    warn_env_var PeerPublicKey
  fi
  if [ -z $PeerAllowedIPs ]; then
    warn_env_var PeerAllowedIPs
  fi
  if [ -z $PeerEndpoint ]; then
    warn_env_var PeerEndpoint
  fi
}

env_var_checks

prep_dirs () {
  if [ -d "$HOME/.wg/keys" ]; then
    echo -n "Directory $HOME/.wg/keys already exists, continuing.."
    sleep 1
    echo '.'
  else
    mkdir -p $HOME/.wg/keys
    chmod -R 700 $HOME/.wg
  fi
}

make_keys () {
  if [ -f $HOME/.wg/keys/$HOSTNAME.key ]; then
    echo "Keys already exist and your pub is $(cat $HOME/.wg/keys/$HOSTNAME.pub)"
    exit 1
  else
    cd $HOME/.wg/keys
    wg genkey | (umask 0077 && tee $HOSTNAME.key) | wg pubkey > $HOSTNAME.pub
  fi
}

mk_wg_conf () {
# No indentation for the here file
cat >> $TMP/wg0.conf <<EOF
[Interface]
Address = $MyAddress
PrivateKey = $MyPrivateKey
DNS = $MyDNS

[Peer]
PublicKey = $PeerPublicKey
AllowedIPs = $PeerAllowedIPs
Endpoint = $PeerEndpoint
EOF
}

main () {
  set -u
  prep_dirs
  make_keys

  MyPrivateKey=$( cat $HOME/.wg/keys/$HOSTNAME.key )

  TMP=$(mktemp -d)
  mk_wg_conf
  WG_CONF_0=/etc/wireguard/wg0.conf
  sudo test -f $WG_CONF_0
  if [ "$?" == "0" ]; then
    echo "$WG_CONF_0 already exists"
    echo "remove $WG_CONF_0 if you want to proceed"
    exit 1
  else
    if [ -d "/etc/wireguard/" ]; then
      echo "Installing $WG_CONF_0 to /etc/wireguard/"
      sudo install -v -m400 $TMP/wg0.conf /etc/wireguard/
      echo "You can now use wg-quick"
      echo 'i.e.'
      echo 'sudo wg-quick up wg0'
    else
      echo "Directory does not exist /etc/wireguard/"
      exit 1
    fi
  fi
}

time main $@
